---
swagger: '2.0'
info:
  title: API V1. Documentation for Api Test
  version: v1
securitySchemes:
  basic_auth:
    type: http
    scheme: basic
paths:
  "/api/orders":
    get:
      summary: Index
      description: Returns all orders existing orders
      tags:
      - Orders
      parameters:
      - name: Authorization
        in: header
        default: 'Token '
      - name: starts
        in: query
        required: false
        type: string
        default: 2020-07-20 15:10:12 UTC
      - name: ends
        in: query
        required: false
        type: string
        default: 2020-07-20 15:10:12 UTC
      produces:
      - application/json
      responses:
        '200':
          description: with valid auth_token and both filters
          examples:
            application/json:
            - id: 48
              name: '2770222156'
              description: Quo totam quaerat. Vero nulla aliquid. Et dicta et.
              date: '2020-06-27T05:22:53.000Z'
            - id: 49
              name: '7357909402'
              description: Facilis qui quo. Non voluptatum et. Sit laborum consectetur.
              date: '2020-07-01T00:56:22.000Z'
            - id: 52
              name: '3370432031'
              description: Laudantium sed quia. Illo consequuntur nostrum. Quasi corporis
                commodi.
              date: '2020-06-23T23:32:13.000Z'
        '422':
          description: with valid auth_token and invalid date format
          examples:
            application/json:
              message: bad value for range
        '401':
          description: invalid token
    post:
      summary: Create
      description: |-
        Creates a new order.
              It receives all the products associated with it as an array with the keyword "products".
              It needs a product_id and a quantity in order to create a new order
      tags:
      - Orders
      parameters:
      - name: Authorization
        in: header
        default: 'Token '
      - name: params
        in: body
        schema:
          type: object
          properties:
            order:
              name:
                type: string
              description:
                type: string
              date:
                type: string
              products:
                type: array
                items:
                  properties:
                    product_id:
                      type: integer
                    quantity:
                      type: integer
              required:
              - name
              - description
              - date
              example:
                name: My new product
                description: some new description
                date: 2020-07-20 15:10:12 UTC
                products:
                - product_id: 5
                  quantity: 10
            required:
            - order
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: with valid auth_token and valid params
          examples:
            application/json:
              id: 59
              name: My new product
              description: some new description
              date: '2020-07-20T15:10:19.000Z'
              products_with_quantity:
              - product_id: 60
                quantity: 5
        '422':
          description: with valid auth_token and invalid params
          examples:
            application/json:
              order_products:
              - is invalid
              name:
              - can't be blank
        '401':
          description: invalid token
        '400':
          description: missing params
  "/api/orders/{id}":
    get:
      summary: Show
      description: Returns an order detail
      tags:
      - Orders
      parameters:
      - name: id
        in: path
        default: 1
        required: true
      - name: Authorization
        in: header
        default: 'Token '
      produces:
      - application/json
      responses:
        '200':
          description: with valid auth_token and valid id
          examples:
            application/json:
              id: 58
              name: '6657109181'
              description: Aut quo illo. Ducimus sunt quibusdam. Facilis mollitia
                id.
              date: '2020-07-02T14:23:06.000Z'
              products_with_quantity:
              - product_id: 59
                quantity: 6
        '404':
          description: with valid auth_token and invalid id
          examples:
            application/json:
              message: Couldn't find Order with 'id'=25515151
        '401':
          description: invalid token
    put:
      summary: Update
      description: |-
        Updates an order It receives all the products associated with it as an array with the keyword "products".
              It needs a product_id and a quantity in order to update an order
      tags:
      - Orders
      parameters:
      - name: Authorization
        in: header
        default: 'Token '
      - name: id
        in: path
        default: 1
        required: true
      - name: params
        in: body
        schema:
          type: object
          properties:
            order:
              name:
                type: string
              description:
                type: string
              date:
                type: string
              products:
                type: array
                items:
                  properties:
                    product_id:
                      type: integer
                    quantity:
                      type: integer
              required:
              - name
              - description
              - date
              example:
                name: My new product
                description: some new description
                date: 2020-07-20 15:10:12 UTC
                products:
                - product_id: 5
                  quantity: 10
            required:
            - order
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: with valid auth_token and valid params
          examples:
            application/json:
              id: 60
              name: My new product
              description: some new description
              date: '2020-07-20T15:10:19.000Z'
              products_with_quantity:
              - product_id: 61
                quantity: 5
        '422':
          description: with valid auth_token and invalid params
          examples:
            application/json:
              order_products:
              - is invalid
              name:
              - can't be blank
        '404':
          description: with valid auth_token and invalid id
          examples:
            application/json:
              message: Couldn't find Order with 'id'=25525252
        '401':
          description: invalid token
        '400':
          description: missing params
    delete:
      summary: Destroy
      description: Destroys an order and all records associated with it
      tags:
      - Orders
      parameters:
      - name: Authorization
        in: header
        default: 'Token '
      - name: id
        in: path
        default: 1
        required: true
      produces:
      - application/json
      responses:
        '204':
          description: with valid auth_token and valid id
        '404':
          description: with valid auth_token and invalid id
          examples:
            application/json:
              message: Couldn't find Order with 'id'=25525252
        '401':
          description: invalid token
  "/api/orders/{id}/products":
    get:
      summary: Products from order
      description: 'Get all the '
      tags:
      - Orders
      parameters:
      - name: Authorization
        in: header
        default: 'Token '
      - name: id
        in: path
        default: 1
        required: true
      produces:
      - application/json
      responses:
        '200':
          description: with valid auth_token and valid id
          examples:
            application/json:
            - id: 62
              name: Producto 66
              description: Corporis sit vero. Laudantium sed quaerat. Ad sequi impedit.
        '404':
          description: with valid auth_token and invalid id
          examples:
            application/json:
              message: Couldn't find Order with 'id'=25525252
        '401':
          description: invalid token
  "/api/products":
    get:
      summary: Index
      description: Returns all existing products
      tags:
      - Products
      parameters:
      - name: Authorization
        in: header
        default: 'Token '
      produces:
      - application/json
      responses:
        '200':
          description: with valid auth_token
          examples:
            application/json:
            - id: 63
              name: Producto 67
              description: Maxime molestiae aut. Quo consequatur ad. Autem et optio.
            - id: 64
              name: Producto 68
              description: Praesentium quae ut. At et autem. Ab commodi veritatis.
            - id: 65
              name: Producto 69
              description: Adipisci nobis aut. Et minus est. Ipsam voluptas qui.
            - id: 66
              name: Producto 70
              description: Est dicta ducimus. Consectetur rem ipsa. Provident voluptatem
                harum.
            - id: 67
              name: Producto 71
              description: Aperiam corporis et. Repudiandae facere dolorum. At magni
                pariatur.
            - id: 68
              name: Producto 72
              description: Amet necessitatibus consequatur. Voluptas mollitia error.
                Neque numquam eos.
            - id: 69
              name: Producto 73
              description: Fuga voluptatem saepe. At dolore ducimus. Enim rem velit.
            - id: 70
              name: Producto 74
              description: Quibusdam quae eius. Est saepe corrupti. Ex iure doloribus.
            - id: 71
              name: Producto 75
              description: Ipsam est et. Eligendi at illum. Amet dicta numquam.
            - id: 72
              name: Producto 76
              description: Aut molestiae magni. Minima magnam et. Laborum et nostrum.
        '401':
          description: invalid token
    post:
      summary: Create
      description: 'Creates a new product '
      tags:
      - Products
      parameters:
      - name: Authorization
        in: header
        default: 'Token '
      - name: params
        in: body
        schema:
          type: object
          properties:
            product:
              name:
                type: string
              description:
                type: string
              required:
              - name
              - description
              example:
                name: My new product
                description: some new description
            required:
            - product
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: with valid auth_token and valid params
          examples:
            application/json:
              id: 84
              name: My new product
              description: some new description
        '422':
          description: with valid auth_token and invalid params
          examples:
            application/json:
              name:
              - can't be blank
        '401':
          description: invalid token
  "/api/products/{id}":
    get:
      summary: Show
      description: Returns a product detail
      tags:
      - Products
      parameters:
      - name: id
        in: path
        default: 1
        required: true
      - name: Authorization
        in: header
        default: 'Token '
      produces:
      - application/json
      responses:
        '200':
          description: with valid auth_token and valid id
          examples:
            application/json:
              id: 83
              name: Producto 87
              description: Dolor voluptatibus vitae. Aspernatur blanditiis eaque.
                Qui porro vitae.
        '404':
          description: with valid auth_token and invalid id
          examples:
            application/json:
              message: Couldn't find Product with 'id'=12
        '401':
          description: invalid token
    put:
      summary: Update
      description: 'Updates a product '
      tags:
      - Products
      parameters:
      - name: Authorization
        in: header
        default: 'Token '
      - name: id
        in: path
        default: 1
        required: true
      - name: params
        in: body
        schema:
          type: object
          properties:
            product:
              name:
                type: string
              description:
                type: string
              required:
              - name
              - description
              example:
                name: My updated product
                description: Updated description
            required:
            - product
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: with valid auth_token and valid params
          examples:
            application/json:
              id: 85
              name: My updated product
              description: updated description
        '422':
          description: with valid auth_token and invalid params
          examples:
            application/json:
              name:
              - can't be blank
        '404':
          description: with valid auth_token and invalid id
          examples:
            application/json:
              message: Couldn't find Product with 'id'=25525252
        '401':
          description: invalid token
    delete:
      summary: Destroy
      description: Destroys a product and all records associated with it
      tags:
      - Products
      parameters:
      - name: Authorization
        in: header
        default: 'Token '
      - name: id
        in: path
        default: 1
        required: true
      produces:
      - application/json
      responses:
        '204':
          description: with valid auth_token and valid id
        '404':
          description: with valid auth_token and invalid id
          examples:
            application/json:
              message: Couldn't find Product with 'id'=25525252
        '401':
          description: invalid token
  "/api/products/populars":
    get:
      summary: Populars
      description: |-
        Returns all products with an order sorted by the quantity they have.
              It can be delimeted with the limit param
      tags:
      - Products
      parameters:
      - name: Authorization
        in: header
        default: 'Token '
      - name: limit
        in: query
        type: string
        required: false
      produces:
      - application/json
      responses:
        '200':
          description: with valid auth_token and limit
          examples:
            application/json:
              Producto 98: 9
              Producto 93: 8
              Producto 96: 8
        '401':
          description: invalid token
  "/api/sessions":
    post:
      summary: Login method
      description: |-
        The user should provide his/hers email and password.
              The request will return the auth_token needed to authorize the other requests
      tags:
      - Sessions
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
            required:
            - email
            - password
      produces:
      - application/json
      responses:
        '200':
          description: with valid user credentials
          examples:
            application/json:
              auth_token: CfqpvTMPq7iVPzFjChiKUw8g
              expires_at: '2020-07-21T15:10:20.000Z'
        '401':
          description: with invalid user credentials
          examples:
            application/json:
              status: 401
              message: Bad credentials
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
